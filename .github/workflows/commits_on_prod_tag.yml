#This workflow creates a file when a new tag is pushed to the repository. Tag needs to be a Production tag
# Production tags can be identified by naming convention: PRODUCTION-XXXX

name: Commits_on_prod_tags

on:
#Enable to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    tags:
      - 'production-*'
env:
    GH_TOKEN: ${{ github.token }}      


jobs:
  repo1_commit:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        repository: tastyworks/early-registration-api
        token: ${{ secrets.TAGS_TOKEN }}
        fetch-depth: 0
    - name: Get Tags
      run: |
        git tag | grep "production-" > all_tags.txt  && tail -2 all_tags.txt > tags.txt
        # Check production tags
        git tag | grep "production-" > prod_tags.txt
        echo "here you go with the Production tags:"
        cat prod_tags.txt
        # Get first tag (previous)
        echo "prev_tag=$(sed -n '1p' tags.txt)" >> $GITHUB_ENV
        
        # Get second tag (newly created)
        echo "new_tag=$(sed -n '2p' tags.txt)" >> $GITHUB_ENV

    - name: Get Commits List
      run: |
        OUT_VAR=$(git log ${{ env.prev_tag }}...${{ env.new_tag }} --pretty=format:"%h \t  %aN \t  %as \t  %s \n") 
        # OUT_VAR=$(git log --before="2022-11-11" --pretty=format:"%h \t  %aN \t  %as \t  %s \n")
        echo "This is the original variable content: $OUT_VAR"
        MOD_VAR=$(echo $OUT_VAR | sed -e s/$//)
        REPO=$GITHUB_REPOSITORY
        REPO="tastyworks/early-registration-api"
        echo "Repo = $REPO"
        APP=$(echo $REPO | sed 's/.*\///')
        echo " APP value is: $APP"
        #cat git_show.txt
        # Get Tagger name and Tag Date
        SHA=$(git show-ref --tags | grep ${{ env.new_tag }} | sed 's/.//41g')
        echo "SHA is $SHA"
        curl -H "Authorization: token ${{ secrets.TAGS_TOKEN }}" https://api.github.com/repos/$REPO/git/tags/$SHA > tag_data.json
        # curl -H "Authorization: token ${{ secrets.GH_TOKEN }}" https://api.github.com/repos/$REPO/git/tags/$SHA > tag_data.json
        
        echo "this is the api endpoint https://api.github.com/repos/$GITHUB_REPOSITORY/git/tags/$SHA"
        echo "tag_data.json follows:"
        cat tag_data.json
        GH_API=$(gh api -H "Accept: application/vnd.github+json" /repos/$REPO/git/tags/$SHA)
        echo "here's GH_API value: $GH_API"
        TAG_DATE=$(jq '.tagger.date' tag_data.json | sed 's/\"//g' | sed 's/.//11g')
        echo "Date $TAG_DATE"
        TAGGER=$(jq '.tagger.name' tag_data.json | sed 's/\"//g')
        echo $TAGGER
        START_DATE="$TAG_DATE 16:00:00"
        echo "Start Date: $START_DATE"
        echo "This is the modified variable content: $MOD_VAR"
        # curl "https://dev135802.service-now.com/api/sn_chg_rest/change/normal" \
        # curl "https://dev135802.service-now.com/api/now/table/change_request" \
         --request POST \
         --header "Accept:application/json" \
         --header "Content-Type:application/json" \
         --data "{\"short_description\":\"Testing new CRF for repo $APP Tag ${{ env.new_tag }}\" }" \
         --user ${{secrets.SN_USER}}:${{secrets.SN_PASSWD}}
