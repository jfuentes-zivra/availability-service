# This workflow creates a file with the commits of the repositories belonging to a team for the last month

name: Consolidated_team_report_monthly

on:
# Schedule to run on the 1st of every monty at 6:30 UTC and also to trigger manually from the Actions tab and schedule it to
  schedule:
    - cron: "30 6 1 * *"
  workflow_dispatch:

jobs:
  build_repo_list:
    runs-on: ubuntu-latest
    
    steps:
    - name: Get Repos and store in file
      run: |
        # Get the list of repositories associated to the Team defined by TEAM_ID in the secrets panel
        curl -H "Authorization: token ${{ secrets.API_TOKEN }}" https://api.github.com/teams/${{ secrets.TEAM_ID }}/repos > repo_list.json
        # Clean repository list and get the full name of repositories
        jq '.[].full_name' repo_list.json > repo_out.json
        # Clean double quotes from repository list
        sed -e s/\"//g -i repo_out.json
        # Get the ID for each repository
        jq '.[].id' repo_list.json > repo_id.json
        # Clean double quotes from repo ID list
        sed -e s/\"//g -i repo_id.json
        # Get team data
        curl -H "Authorization: token ${{ secrets.API_TOKEN }}" https://api.github.com/teams/${{ secrets.REPO_ID }} > team_info.json
    
    - name: Run Monthy Report
      run: |
        month_date=$(date --date "-1 month" +%Y-%m-%d)
        today=$(date +%Y-%m-%d)
        # Get the name of the team and clean double quotes
        team=$(jq '.name' team_info.json | sed -e s/\"//g)
        # Iterate on the repository list (repo_out.json) to get the commits for each repository
        while read p; do
          # Replace slash in full name for dash (tastyworks/repository to tastyworks-repository)
          repo_file=$(echo $p | sed 's/\//-/g')
          # Add header to output csv file
          echo "Monthly report for Repository $p" >> monthly_commits_"$month_date"_to_"$today"_"$team".csv 
          # Get the commits for the repository in this iteration
          curl -H "Authorization: token ${{ secrets.API_TOKEN }}" https://api.github.com/repos/"$p"/commits?per_page=100 > out.json
          # Use jq to filter the commits from last week to date and get repository, sha, name, date, message 
          jq --arg REPO "$p" --arg filter_date $month_date -r '[.[] | select(.commit.author.date > $filter_date )] | [ "Repo", "Sha", "Name", "Commit Date", "Commit Msg" ], ( .[] | [ $REPO, .sha, .commit.author.name, .commit.author.date, .commit.message ]  ) | @csv' out.json >> monthly_commits_"$month_date"_to_"$today"_"$team".csv
         done < repo_out.json
        # Setup github_env variables to use in next steps
        echo "rf=$team" >> $GITHUB_ENV
        echo "td=$today" >> $GITHUB_ENV
        echo "md=$month_date" >> $GITHUB_ENV

    - name: Get Monthly Report as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: summarized_monthly_report
        path: ./monthly_commits_${{ env.md }}_to_${{ env.td }}_${{ env.rf }}.csv
        # Upload artifact to GitHub for later retrieval

